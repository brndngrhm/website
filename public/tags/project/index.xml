<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project | Brendan Graham</title>
    <link>https://brendangraham.netlify.com/tags/project/</link>
      <atom:link href="https://brendangraham.netlify.com/tags/project/index.xml" rel="self" type="application/rss+xml" />
    <description>Project</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© Brendan Graham, 2021</copyright><lastBuildDate>Fri, 06 Nov 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://brendangraham.netlify.com/img/icon-192.png</url>
      <title>Project</title>
      <link>https://brendangraham.netlify.com/tags/project/</link>
    </image>
    
    <item>
      <title>Routeabaga</title>
      <link>https://brendangraham.netlify.com/project/routeabaga/</link>
      <pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://brendangraham.netlify.com/project/routeabaga/</guid>
      <description>&lt;h3 id=&#34;routeabagahttpsbrndngrhmshinyappsiorouteabaga&#34;&gt;&lt;a href=&#34;https://brndngrhm.shinyapps.io/Routeabaga/&#34;&gt;Routeabaga&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is a simple website to help philly-area cyclists share and discover new routes. The site sources routes from a google sheet linked this &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLScAJz4tpKESbKfPZnADoPGhpm2Dy-M-45O6Pl1gf7x07rx4XA/viewform&#34;&gt;google form&lt;/a&gt;, applies some formatting, adds some filters and then presents the routes in the table you see above.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Everyone Everywhere Music Analysis Tool</title>
      <link>https://brendangraham.netlify.com/project/spotify_analyzer/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://brendangraham.netlify.com/project/spotify_analyzer/</guid>
      <description>&lt;p&gt;This app calls the Spotify API and leverages the &amp;ldquo;Features&amp;rdquo; that Spotify uses to classify songs. This project started when we were joking that we could use AI to write a new Everyone Everywhere song. That conversation reminded me of a &lt;a href=&#34;https://peerchristensen.netlify.com/post/clustering-springsteen-albums-with-spotifyr/&#34;&gt;blog post&lt;/a&gt; I had seen where the author used the &lt;code&gt;spotifyR&lt;/code&gt; package to get song data and analyze the songs. I thought it would be interesting to analyze my own band&amp;rsquo;s songs in the same manner, and also provide anyone a way to search for bands and see how Spotify classifies their songs in terms of energy, danceability, valence, liveness, etc&amp;hellip;&lt;/p&gt;
&lt;h4 id=&#34;check-out-the-app-herehttpsbrndngrhmshinyappsioeveryoneeverywheremusicanalysistool&#34;&gt;Check out the app &lt;a href=&#34;https://brndngrhm.shinyapps.io/EveryoneEverywhereMusicAnalysisTool/&#34;&gt;here&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Upon load, the app displays an analysis of Everyone Everywhere tracks. A user can pick a feature, such as energy, and the app will rank tracks according to energy, and show a distribution of track energy for every album associated with the band. The lower left chart uses k-means to cluster artist tracks, and the lower right radar charts show how albums compare to each other across several features.&lt;/p&gt;
&lt;p&gt;Read more about the development process on my &lt;a href=&#34;wwww.example.com&#34;&gt;blog post&lt;/a&gt; or view the project on &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MyRide</title>
      <link>https://brendangraham.netlify.com/project/my_ride/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://brendangraham.netlify.com/project/my_ride/</guid>
      <description>&lt;p&gt;This purpose of this app is to help cyclists review and analyze their interval workout to see if they hit the right numbers.&lt;/p&gt;
&lt;h4 id=&#34;check-out-the-app-herehttpsbrndngrhmshinyappsiomyride&#34;&gt;Check out the app &lt;a href=&#34;https://brndngrhm.shinyapps.io/MyRide/&#34;&gt;here&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Intervals are a common training method for cyclists, and are usually structured in an alternating easy/hard/easy/hard manner. A typical interval workout might be something like 10 minute warm up, 5 minutes @ 250 watts followed by 5 minutes @ 130 watts, repeated 4 times then followed by a 10 minute cool down. On an indoor trainer its pretty easy to pay attention during a workout and make sure your riding at the specified power or heart rate. But outdoors it&amp;rsquo;s much harder to keep a close eye on your cycling computer because you&amp;rsquo;ve got to be almost constantly scanning the road and your surroundings.&lt;/p&gt;
&lt;p&gt;This app allows a cyclist to analyze their intervals after their workout. You upload a workout, and the app applies a change-point detection algorithm which automatically identifies interval windows, and then takes an average over that window which the rider can then use to gauge if they rode at the specified power or heart rate during each interval.&lt;/p&gt;
&lt;p&gt;Read more about the development process on my &lt;a href=&#34;wwww.example.com&#34;&gt;blog post&lt;/a&gt; or view the project on &lt;a href=&#34;https://github.com/brndngrhm/my_ride&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RideTracker</title>
      <link>https://brendangraham.netlify.com/project/ride_tracker/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://brendangraham.netlify.com/project/ride_tracker/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://brndngrhm.shinyapps.io/RideTracker/&#34;&gt;RideTracker&lt;/a&gt; app was the first reactive data viz app I developed. It provides a way for me to track my training and commuting, in both a weekly snapshot view as well as over time, in ways that the &lt;a href=&#34;https://github.com/fawda123/rStrava&#34;&gt;Strava&lt;/a&gt; user profile page doesn&amp;rsquo;t provide.&lt;/p&gt;
&lt;p&gt;At the time, I&amp;rsquo;d been seeing so many cool examples of Shiny apps and really wanted to make my own. I decided to make one using my Cycling data because I had just started to take training seriously and began racing competitively. I was looking for a way to analyze my training volume on a weekly basis and comparatively over time. The App is built on the &lt;code&gt;flexdashboard&lt;/code&gt; framework with a &lt;code&gt;Shiny&lt;/code&gt; reactive engine allowing me to dynamically filter the charts based on the sidebar inputs. I was able to retrieve my data using the &lt;a href=&#34;https://github.com/fawda123/rStrava&#34;&gt;&lt;code&gt;rStrava&lt;/code&gt; package&lt;/a&gt;, and created all the charts using the  &lt;code&gt;highcharter&lt;/code&gt; package.&lt;/p&gt;
&lt;p&gt;Read more about the development process on my &lt;a href=&#34;wwww.example.com&#34;&gt;blog post&lt;/a&gt; or view the project on &lt;a href=&#34;https://github.com/brndngrhm/rides&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wissahickon Valley Park Explorer</title>
      <link>https://brendangraham.netlify.com/project/wissahickon/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://brendangraham.netlify.com/project/wissahickon/</guid>
      <description>&lt;p&gt;The motivation for creating this app is two-fold:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I couldnt find something like this online and I wanted it, so I made it, and&lt;/li&gt;
&lt;li&gt;It gave me the oppurtnity to learn more about creating interactive maps in R, specifically using the &lt;code&gt;leaflet&lt;/code&gt; package.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://brndngrhm.shinyapps.io/Wissahickon_Valley_Park_Explorer/&#34;&gt;Check it out here!&lt;/a&gt; and read below to learn more about the app.&lt;/p&gt;
&lt;p&gt;Moving from Fishtown to the Wissahickon neighborhood gives us an amazing oppurtunity to explore the nearby trails basically whenever we want. Being near the southern end of the woods  means we end up exposed to a limited number of trails. While the trails themselves are well documented in Google Maps and by the
&lt;a href=&#34;https://www.fow.org/visit-the-park/&#34;&gt;Friends of the Wissahickon&lt;/a&gt;, I haven&amp;rsquo;t been able to find anywhere that actually provides any hiking routes.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Wissahickon Valley Park Explorer&lt;/strong&gt; app lets a user plan their visit to the Wiss by viewing some suggested routes, view the locations of some attractions (statues, covered bridges, caves&amp;hellip;) and see parking and trailhead locations. While most of what I just mentioned is already available in a &lt;a href=&#34;https://www.google.com/maps/d/u/1/edit?mid=13bLD32SSIsOkay-FgK5NqHWOmrBIPUXS&amp;amp;ll=40.03639125389725%2C-75.21352925836845&amp;amp;z=14&#34;&gt;detailed map&lt;/a&gt; created by the Friends of the Wissahickon, this app improves on that by including some specified hiking loops  that a user can toggle on/off, as well as some notes on what to expect on certain trails - like if a portion of a trail tends to flood or is composed of loose rock. These miscellaneous notes come from my geo-tagged notes I make while hiking. My hope is to create a dozen or so routes over the next year, comlete with detailed information for each one.&lt;/p&gt;
&lt;p&gt;Read about the data used and development process on my &lt;a href=&#34;www.example.com&#34;&gt;blog post&lt;/a&gt; about it, or check it out on &lt;a href=&#34;https://github.com/brndngrhm/wissahickon_valley_explorer&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;













&lt;figure class=&#34;rotate90&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;fall_creek.jpg&#34; data-caption=&#34;Yes! This is Philadelphia!&#34;&gt;
&lt;img src=&#34;fall_creek.jpg&#34; alt=&#34;&#34; &gt;&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Yes! This is Philadelphia!
  &lt;/figcaption&gt;


&lt;/figure&gt;

</description>
    </item>
    
  </channel>
</rss>
